issue the command "ruby chinese_gen.rb width height pointsize" to generate the chinese font
for example : ruby ruby chinese_gen.rb 10 18 18


-------------------------------------------

user guide:

follow this steps to generate a font.h:

1.sudo apt-get install ruby1.9.1

2.sudo apt-get install ruby1.9.1-dev

3.sudo apt-get install libmagickwand-dev

4.sudo gem1.9.1 install rmagick

5.sudo apt-get install gperf

then you can issue the following command to generate a font.h:

ruby chinese_gen.rb


1.使用chinese_gen.rb

    把chinese_gen.rb脚本下载下来先,点击此处下载!
    脚本存放在minui文件夹里，需要安装好ruby环境才可使用，不知到怎么安装的话那自己谷歌去。。
    双击运行，他会生chinese_custom.gperf/chinese_custom.h/chinese.bmp/chinese.preview.txt/font.h，其中chinese_custom.gperf/chinese_custom.h/font.h就是我们需要的文件。
    用minui文件夹里的graphics.c替换原本的graphics.c,并把chinese.c/chinese.h一同复制过去.
    在Android.mk里面的LOCAL_SRC_FILES中加上chinese.c；
    重新编译一下，中文显示出来了吧,不过字体有点瑕疵，我编译的ADB和USB大容量存储模式都不可使用，你自己测试下吧！


2.使用xiaolu的中文字库

    这种方法就简单许多了，只需替换几个文件即可，让我们下载好中文字库先,点击此处下载!
    把minui文件夹的graphics_cn.c/font_cn_tiny.h/font_10x18_cn.h复制到CWM recovery源码的minui文件夹里.
    把graphics_cn.c重命名为graphics.c，此文件本身调用的字库是删减版的，不全面，如果你的中文显示不全，那就需要把里面的font_cn_tiny.h替换为font_10x18_cn.h即可；
    重新编译一次，中文成功显示吧，并且无瑕疵，ADB和USB大容量存储模式可以使用。建议使用这种方法!!!

